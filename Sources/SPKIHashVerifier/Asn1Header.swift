import Foundation

public enum Asn1Header {
  case rsa2048
  case rsa4096
  case ecDsaSecp256r1
  case ecDsaSecp384r1
  
  var bytes: [UInt8] {
    
    switch self {
    case .rsa2048: return [0x30, 0x82, 0x01, 0x22, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86,
                           0xf7, 0x0d, 0x01, 0x01, 0x01, 0x05, 0x00, 0x03, 0x82, 0x01, 0x0f, 0x00]
    case .rsa4096: return [0x30, 0x82, 0x02, 0x22, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86,
                           0xf7, 0x0d, 0x01, 0x01, 0x01, 0x05, 0x00, 0x03, 0x82, 0x02, 0x0f, 0x00]
    case .ecDsaSecp256r1: return [0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02,
                                  0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03,
                                  0x42, 0x00]
    case .ecDsaSecp384r1: return [0x30, 0x76, 0x30, 0x10, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02,
                                  0x01, 0x06, 0x05, 0x2b, 0x81, 0x04, 0x00, 0x22, 0x03, 0x62, 0x00]
    }
  }
  
  static func inferFrom(publicKeyType: CFString?, publicKeySize: UInt32?) -> Asn1Header? {
    switch (publicKeyType, publicKeySize) {
    case (kSecAttrKeyTypeRSA, 2048): return .rsa2048
    case (kSecAttrKeyTypeRSA, 4096): return .rsa4096
    case (kSecAttrKeyTypeECSECPrimeRandom, 256): return .ecDsaSecp256r1
    case (kSecAttrKeyTypeECSECPrimeRandom, 384): return .ecDsaSecp384r1
    default: return nil
    }
  }
}
